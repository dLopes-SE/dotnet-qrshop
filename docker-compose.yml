version: "3.9"

volumes:
  db-data:
  
services:
  db:
    image: postgres:15
    container_name: qrshop-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-qrshop}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 3s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: .
      dockerfile: ./src/Dockerfile
    container_name: qrshop-backend
    environment:
      ASPNETCORE_URLS: http://+:5000
      ASPNETCORE_ENVIRONMENT: Development
      JwtSettings__Key: ${JWT_SECRET_KEY:-19492ac5-15a8-471e-8fde-af76f5996c0a}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-}
      ConnectionStrings__Database: "Host=db;Port=5432;Database=${POSTGRES_DB:-qrshop};Username=${POSTGRES_USER:-postgres};Password=${POSTGRES_PASSWORD:-postgres}"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:5000"

  frontend:
    image: ghcr.io/dlopes-se/nextjs-qrshop-public:latest
    container_name: qrshop-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://backend:5000
      NEXTAUTH_SECRET: DKztf4UKt5UAhlfMmrZLs7Qsl/OF/8VKmO+8JM6YAmQ=
      NEXT_PUBLIC_STRIPE_ENABLED: ${STRIPE_SECRET_KEY:+true}
    ports:
      - "3000:3000"
    depends_on:
      - backend
